
###Request-1

select distinct(market) as markets
from gdb023.dim_customer
where customer = 'Atliq Exclusive' and region = 'APAC';

###Request-2

with unique_products_2020(unique_products_2020) 
as
(
select count(distinct(product_code)) as unique_products_2020
from gdb023.fact_sales_monthly
where fiscal_year = 2020
)
,unique_products_2021(unique_products_2021) 
as
(
select count(distinct(product_code)) as unique_products_2021
from gdb023.fact_sales_monthly
where fiscal_year = 2021 
)
select *,round(((cast(unique_products_2021 as float) - cast(unique_products_2020 as float))/cast(unique_products_2020 as float))* 100,0) as percentage_chg 
from unique_products_2020 cross join unique_products_2021;

###Request-3

select segment,count(distinct(product_code)) as product_count
from gdb023.dim_product
group by segment
order by product_count desc;

###Request-4

with prod_count_2020(segment, product_count_2020) as
(
select segment, count(distinct(a.product_code)) as product_count_2020
from gdb023.fact_sales_monthly a
join gdb023.dim_product b
on  a.product_code = b.product_code
where fiscal_year = 2020
group by segment
)
,prod_count_2021(segment, product_count_2021) as
(
select segment, count(distinct(a.product_code)) as product_count_2021
from gdb023.fact_sales_monthly a
join gdb023.dim_product b
on  a.product_code = b.product_code
where fiscal_year = 2021
group by segment
)
select  a.segment, a.product_count_2020, b.product_count_2021, b.product_count_2021 - a.product_count_2020 as difference
from prod_count_2020 a join prod_count_2021 b
on a.segment = b.segment
order by difference desc;

###Request-5

select a.product_code, b.product, a.manufacturing_cost
from gdb023.fact_manufacturing_cost a
join gdb023.dim_product b
on a.product_code = b.product_code
where a.manufacturing_cost = (select max(manufacturing_cost) from gdb023.fact_manufacturing_cost) 
      or a.manufacturing_cost = (select min(manufacturing_cost) from gdb023.fact_manufacturing_cost);

###Request-6

select  b.customer_code, b.customer, round(avg(a.pre_invoice_discount_pct)*100, 2)  as average_discount_percentage
from gdb023.fact_pre_invoice_deductions a
join gdb023.dim_customer b
on a.customer_code = b.customer_code
where fiscal_year = 2021 and market = 'India'
group by b.customer, b.customer_code
order by average_discount_percentage desc
limit 5;

###Request-7

select month(b.date) as Month, year(b.date) as Year, round(sum(c.gross_price * b.sold_quantity),0) as 'Gross sales Amount' 
from gdb023.dim_customer a 
join gdb023.fact_sales_monthly b 
on a.customer_code = b.customer_code 
join gdb023.fact_gross_price c 
on b.product_code = c.product_code
where customer = 'Atliq Exclusive'
group by Month, Year
order by Year;

###Request-8

with f_y2020(Quarter, total_sold_quantity) as
(
select case when month(date) in (9, 10, 11) then 'Q1'
            when month(date) in (12, 1, 2) then 'Q2'
            when month(date) in (3, 4, 5) then 'Q3'
            else 'Q4'
            end as Quarter, sum(sold_quantity) 	
from gdb023.fact_sales_monthly
where fiscal_year = 2020
group by Quarter
)
select Quarter, total_sold_quantity
from f_y2020
order by total_sold_quantity desc;

###Request-9

with Gross_sales_CTE(Channel, gross_sales_mln) as
(
select c.channel, round(sum(g.gross_price * s.sold_quantity)/1000000 ,3) as gross_sales_mln
from gdb023.dim_customer c 
join gdb023.fact_sales_monthly s 
on c.customer_code = s.customer_code 
join gdb023.fact_gross_price g 
on s.product_code = g.product_code
where s.fiscal_year = 2021
group by c.channel
)
select *,round(gross_sales_mln/sum(gross_sales_mln) over () * 100, 2) as percentage
from Gross_sales_CTE
order by percentage desc
limit 1;

###Request-10

select *
from (
with DivCTE(division, product_code, product, total_sold_quantity)
as
(
select b.division, a.product_code, b.product, sum(a.sold_quantity) as total_sold_quantity
from gdb023.fact_sales_monthly a
join gdb023.dim_product b
on a.product_code = b.product_code
where fiscal_year = 2021
group by b.division, a.product_code, b.product
)
select *, rank() over (partition by division  order by total_sold_quantity desc) as rank_order
from DivCTE
) as Top3products
where rank_order in (1, 2, 3);




































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































